package com.github.leftisttachyon.dsiworld.interceptor;

import lombok.extern.slf4j.Slf4j;
import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * A {@link org.springframework.web.servlet.HandlerInterceptor HandlerInterceptor}
 * that filters requests to member-affiliated pages.
 *
 * @author Jed Wang
 * @since 1.0.0
 */
@Slf4j
public class MemberInterceptor extends HandlerInterceptorAdapter {

    @Override
    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
//        log.debug("request URI: {}", request.getRequestURI());
//        log.debug("user attribute: {}", request.getSession().getAttribute("user"));
        if (request.getRequestURI().startsWith("/member") && request.getSession().getAttribute("user") == null) {
            String fullRequestURL = getFullRequestURL(request);
            log.debug("Full URL: {}", fullRequestURL);
            request.getSession().setAttribute("redirectTo", fullRequestURL);
            response.sendRedirect("/login");

            return false;
        }

        return true;
    }

    /**
     * Returns the full request URL of the given {@link HttpServletRequest}.
     * @param request the request generated by the user
     * @return the URL that was requested by the user
     */
    private String getFullRequestURL(HttpServletRequest request) {
        StringBuffer buffer = request.getRequestURL();
        String queryString = request.getQueryString();
        if (queryString != null) {
            buffer.append('?');
            buffer.append(queryString);
        }
        return buffer.toString();
    }
}
